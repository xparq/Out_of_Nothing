#ifndef _2398NV278904V24678B02N8970C980MX21M82794C5N82V47956W48597_
#define _2398NV278904V24678B02N8970C980MX21M82794C5N82V47956W48597_

//
// Interfacing with the SFML keyboard API
//

#include "Engine/UI/Input.hpp"
#include "SFML/Window/Event.hpp"

#include "myco/sys/Event.hpp"

namespace UI {

//!! Simple, but FRAGILE map from SFML keys to ours -- SFML codes can change at any time!
//!! (Especially as they haven't released a stable v3 API yet!)
static inline/*!!??*/ constinit enum VKEY _SFMLKEY_TO_VKEY_MAP[] = {
	VKEY::A, VKEY::B, VKEY::C, VKEY::D, VKEY::E, VKEY::F, VKEY::G, VKEY::H,
		VKEY::I, VKEY::J, VKEY::K, VKEY::L, VKEY::M, VKEY::N, VKEY::O, VKEY::P,
	VKEY::Q, VKEY::R, VKEY::S, VKEY::T, VKEY::U, VKEY::V, VKEY::W, VKEY::X,
		VKEY::Y, VKEY::Z, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::ESCAPE, VKEY::NUL, VKEY::LCTRL, VKEY::LSHIFT, VKEY::LALT,
		VKEY::WINDOWS, VKEY::RCTRL, VKEY::RSHIFT, VKEY::RALT, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::TILDE, VKEY::NUL,
		VKEY::NUL, VKEY::SPACE, VKEY::NUL, VKEY::NUL, VKEY::TAB, VKEY::NUL, VKEY::NUL, VKEY::NUL,

	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::LEFT,
		VKEY::RIGHT, VKEY::UP, VKEY::DOWN, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::F1, VKEY::F2, VKEY::F3, VKEY::F4,
		VKEY::F5, VKEY::F6, VKEY::F7, VKEY::F8, VKEY::F9, VKEY::F10, VKEY::F11, VKEY::F12,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::PAUSE, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,

	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,

	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
	VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
		VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL, VKEY::NUL,
};

// SFML -> SimApp virt. keycode translation
constexpr auto _keycode_from_SFML(auto sfml_keycode) { return _SFMLKEY_TO_VKEY_MAP[sfml_keycode]; }

// Call this once, somewhere in the (beginning of the) app's SFML event loop!
void update_keys_from_SFML(const sf::Event& sfml_event);
//!! Note: ideally, other UI backends would just need their own overloads on their specific event type.

//!! TMP. UNTIL xparq/sfw2#460:
void update_keys_from_Myco(const myco::event::Input& myco_event);

} // namespace UI

#endif // _2398NV278904V24678B02N8970C980MX21M82794C5N82V47956W48597_
